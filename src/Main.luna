
import Std.Base
import Std.Foreign
import Std.Foreign.C.Value

import MongoDB.Cursor
import MongoDB.Collection
import MongoDB.Database
import MongoDB.Client
import MongoDB.MongoDB

def main:
    MongoDB.init
    client = MongoDB.newClient "mongodb://192.168.11.20:27017/defolt"
    collection = client.collection "testy" "lunadb"
    collection.insertOne (JSON.parse '{"hello": "world"}')
    collection.insertOne (JSON.parse '{"hello": "world"}')
    findQuery = JSON.parse '{}'
    updateResult = collection.updateOne findQuery ('{"$set": {"cos" : "nowego"}}')
    print ("Update result: " + updateResult.toText)

def main5:
    MongoDB.init
    client = MongoDB.newClient "mongodb://192.168.11.20:27017/defolt"
    col = client.collection "sample" "grades"
    count = col.command (JSON.parse '{"distinct" : "grades", "key" : "student_id"}')
    print count
    count2 = col.distinct "scores.score" (Just (JSON.parse '{"class_id" : 2}'))
    print count2

def main4:
    MongoDB.init
    client = MongoDB.newClient "mongodb://192.168.11.20:27017/defolt"
    db = client.database "lunaDB"
    print db.collectionNames
    col2 = db.collection "testy5"
    print db.collectionNames
    col = db.collection "testy2"
    print db.collectionNames
    print "will rename"
    col2.rename "lunaDB" "testy4" DropTargetBeforeRename
    print db.collectionNames
    print (col.insertOne (JSON.parse '{"hello": "world"}'))
    print db.collectionNames
    print col.drop
    print db.collectionNames

def main3:
    print "Main start"
    MongoDB.init
    client = MongoDB.newClient "mongodb://192.168.11.20:27017/defolt"
    print client.defaultDatabase.get.name
    print client.databaseNames
    print (client.database "lunaDB" . collectionNames)
    print (client.database "lunaDB" . hasCollection "moje")
    print (client.database "lunaDB" . hasCollection "mojee")
    collection = client.collection "lunaDB" "lunaCollection"
    result = collection.insertOne (JSON.parse '{"hello": "world"}')
    print ("Insert one result: " + result.toText)
    result = collection.findOne('{}')
    print ("Find one result: " + result.toText)
    result = collection.deleteMany (JSON.parse '{"hello": "world"}')
    print ("Delete result: " + result.toText)
    result = collection.findAll('{}')
    print ("All documents: " + result.toText)
    result = collection.count('{}')
    print ("Total count: " + result.toText)
    
    client2 = MongoDB.newClient "mongodb://192.168.11.21:27017/defolt"
    print (client2.database "lunaDB" . hasCollection "moje")

def main2:
    MongoDB.init
    client = MongoDB.newClient "mongodb://192.168.11.20:27017"
    client.setAppname "lunawrapper"

    db = client.database "lunaDB"
    print db.collectionNames

    pingCommandJSON = JSON.parse '{"ping": 1}'
    client.simpleCommand "admin" pingCommandJSON
    wrongCommandJSON = JSON.parse '{"pung": 1}'
    print (runError (client.simpleCommand "admin" wrongCommandJSON))
    collection = client.collection "lunaDB" "lunaCollection"
    collection.insertOne (JSON.parse '{"hello": "world"}')
    print ("Database name is " + db.name)
    print ("Collection name is " + collection.name)
    print (runError (collection.insertOne  (JSON.parse '{"hello": world}')))
    findQuery = JSON.parse '{"hello" : "s"}'

    updateResult = collection.updateOne findQuery ('{"$set": {"cos" : "nowego"}}')
    print ("Update result: " + updateResult.toText)

    result = collection.findOne('{}')

    print ("Searching for documents with query " + findQuery.toText + "...")
    documents = collection.findAll findQuery
    print ("Found " + documents.length.toText + " documents:")
    documents.each doc:
        print (" - " + doc.toText)
