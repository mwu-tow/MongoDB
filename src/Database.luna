import Std.Base
import Std.Foreign
import Std.Foreign.C.Value

import MongoDB.Utils
import MongoDB.Collection

# Pointer None -> Database
def databaseFromPointer ptr:
    mongoc_database_destroy = mongoc "mongoc_database_destroy"
    case ptr.isNull of 
        True: throw "missing database"
        False: 
            Database (managedPtr mongoc_database_destroy ptr)
    
class Database:
    ptr :: ManagedPointer None
    def name:
        nameCStr = mongoc "mongoc_database_get_name" . call (Pointer CChar) [self.ptr.toCArg]
        readTextUnownedFromCStr nameCStr.ptr
    def collectionNames:
        callMongohReturningTexts "mongoh_get_collection_names" [self.ptr.toCArg]
    def hasCollection name:
        result = singleStringMethod self.ptr (CInt8) (mongoh "mongoh_has_collection") name
        reportIfError result
        
